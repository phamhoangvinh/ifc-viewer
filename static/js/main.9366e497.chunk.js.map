{"version":3,"sources":["components/BcfDialog.js","App.js","reportWebVitals.js","index.js","../node_modules/web-ifc sync"],"names":["useStyles","makeStyles","root","maxWidth","media","height","BcfDialog","props","onOpenViewpoint","rest","useState","file","setFile","topics","setTopics","handleOpenViewpoint","viewpoint","onClose","onDrop","useCallback","acceptedFiles","a","reader","BcfReader","read","useDropzone","accept","getRootProps","getInputProps","isDragActive","fitleredTopics","filter","t","viewpoints","length","Dialog","fullWidth","disableBackdropClick","DialogTitle","DialogContent","Box","display","alignItems","justifyContent","border","borderColor","borderRadius","Typography","variant","Grid","container","spacing","map","topic","i","item","TopicCard","DialogActions","Button","onClick","classes","defaultViewpoint","markup","defaultViewpointUrl","setDefaultViewpointUrl","useEffect","getViewpointSnapshot","data","url","window","URL","createObjectURL","getViewpoint","Card","className","CardActionArea","CardMedia","image","title","CardContent","gutterBottom","component","color","description","App","state","bcfDialogOpen","loaded","loading_ifc","files","setState","viewer","IFC","loadIfc","handleToggleClipping","clipper","active","handleClickOpen","dropzoneRef","current","open","handleOpenBcfDialog","handleCloseBcfDialog","currentViewpoint","React","createRef","document","getElementById","IfcViewerAPI","addAxes","addGrid","setWasmPath","this","onmousemove","prepickIfcItem","ondblclick","addClippingPlane","style","flexDirection","width","IconButton","ref","flex","minWidth","id","position","Backdrop","zIndex","alignContent","CircularProgress","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","webpackEmptyContext","req","e","Error","code","keys","resolve","module","exports"],"mappings":"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","file":"static/js/main.9366e497.chunk.js","sourcesContent":["import { useDropzone } from 'react-dropzone';\r\nimport { useCallback, useEffect, useState } from 'react';\r\nimport { BcfReader } from '@parametricos/bcf-js';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Button from '@material-ui/core/Button';\r\nimport { Box, Dialog, DialogActions, DialogContent, DialogTitle, Grid, Typography } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        maxWidth: 345,\r\n    },\r\n    media: {\r\n        height: 140,\r\n    },\r\n});\r\n\r\nexport default function BcfDialog(props) {\r\n\r\n    const { onOpenViewpoint, ...rest } = props;\r\n\r\n    const [file, setFile] = useState();\r\n    const [topics, setTopics] = useState([]);\r\n\r\n    const handleOpenViewpoint = (viewpoint) => {\r\n        onOpenViewpoint(viewpoint);\r\n        props.onClose()\r\n    }\r\n\r\n    const onDrop = useCallback(async (acceptedFiles) => {\r\n        const reader = new BcfReader();\r\n        await reader.read(acceptedFiles[0]);\r\n        setTopics(reader.topics);\r\n        setFile(acceptedFiles[0])\r\n    }, []);\r\n\r\n    const { getRootProps, getInputProps, isDragActive } = useDropzone({ onDrop, accept: \".bcf\" });\r\n\r\n    const fitleredTopics = topics.filter((t) => t.viewpoints.length > 0);\r\n\r\n    return (\r\n      <Dialog maxWidth='xl' fullWidth disableBackdropClick {...rest}>\r\n          <DialogTitle>BCF Viewer</DialogTitle>\r\n          <DialogContent>\r\n              {!file && (\r\n                <Box\r\n                  height={600}\r\n                  display='flex'\r\n                  alignItems=\"center\"\r\n                  justifyContent=\"center\"\r\n                  border={isDragActive ? \"solid 4px\" : \"none\" }\r\n                  borderColor={isDragActive ? \"#ffa50f\" : \"\" }\r\n                  borderRadius={20}\r\n                  {...getRootProps()}\r\n                >\r\n                    <input {...getInputProps()} />\r\n                    {\r\n                        isDragActive ?\r\n                          <Typography variant=\"h6\">Drop the BCF here ...</Typography> :\r\n                          <Typography variant=\"h6\">Drag 'n' drop a BCF here, or click to select</Typography>\r\n                    }\r\n                </Box>\r\n              )}\r\n              {file && (\r\n                <Grid container spacing={2}>\r\n                    {fitleredTopics.map((topic, i) => (\r\n                      <Grid key={i} item>\r\n                            <TopicCard topic={topic} onOpenViewpoint={handleOpenViewpoint} />\r\n                      </Grid>\r\n                    ))}\r\n                </Grid>\r\n              )}\r\n          </DialogContent>\r\n          <DialogActions>\r\n              <Button onClick={props.onClose}>\r\n                  Close\r\n              </Button>\r\n          </DialogActions>\r\n      </Dialog>\r\n    );\r\n}\r\n\r\nfunction TopicCard(props){\r\n\r\n    const classes = useStyles();\r\n\r\n    const { topic, onOpenViewpoint } = props;\r\n\r\n    const defaultViewpoint = topic?.markup?.viewpoints?.length > 0 ? topic.markup.viewpoints[0] : null;\r\n\r\n    const [defaultViewpointUrl, setDefaultViewpointUrl] = useState(\"\");\r\n\r\n    const handleClick = () => {\r\n        if(topic.viewpoints.length > 0) {\r\n            onOpenViewpoint(topic.viewpoints[0]);\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        const getViewpoint = async () => {\r\n            if(defaultViewpoint){\r\n                const data = await topic.getViewpointSnapshot(defaultViewpoint);\r\n                const url = window.URL.createObjectURL(data);\r\n                setDefaultViewpointUrl(url);\r\n            }\r\n        }\r\n        getViewpoint()\r\n    }, [defaultViewpoint, topic]);\r\n\r\n    return (\r\n      <Card className={classes.root}>\r\n          <CardActionArea onClick={handleClick}>\r\n              <CardMedia\r\n                className={classes.media}\r\n                image={defaultViewpointUrl}\r\n                title={topic.markup.topic.title}\r\n              />\r\n              <CardContent>\r\n                  <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                      {topic.markup.topic.title}\r\n                  </Typography>\r\n                  <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                      {topic.markup.topic.description}\r\n                  </Typography>\r\n              </CardContent>\r\n          </CardActionArea>\r\n          {/*<CardActions>\r\n              <Button size=\"small\" color=\"primary\">\r\n                  Open\r\n              </Button>\r\n              <Button size=\"small\" color=\"primary\">\r\n                  Learn More\r\n              </Button>\r\n          </CardActions>*/}\r\n      </Card>\r\n    )\r\n}","import './App.css';\r\nimport { IfcViewerAPI } from 'web-ifc-viewer';\r\nimport { Backdrop, CircularProgress, IconButton } from '@material-ui/core';\r\nimport React from 'react';\r\nimport Dropzone from 'react-dropzone';\r\nimport BcfDialog from './components/BcfDialog';\r\n\r\n//Icons\r\nimport FolderOpenOutlinedIcon from '@material-ui/icons/FolderOpenOutlined';\r\nimport CropIcon from '@material-ui/icons/Crop';\r\nimport FeedbackOutlinedIcon from '@material-ui/icons/FeedbackOutlined';\r\n\r\nclass App extends React.Component {\r\n\r\n    state = {\r\n        bcfDialogOpen: false,\r\n        loaded: false,\r\n        loading_ifc: false\r\n    };\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.dropzoneRef = React.createRef();\r\n    }\r\n\r\n    componentDidMount() {\r\n        const container = document.getElementById('viewer-container');\r\n        const viewer = new IfcViewerAPI({container});\r\n        viewer.addAxes()\r\n        viewer.addGrid()\r\n        viewer.IFC.setWasmPath('./wasm/');\r\n\r\n        this.viewer = viewer;\r\n\r\n        window.onmousemove = viewer.prepickIfcItem;\r\n        window.ondblclick = viewer.addClippingPlane\r\n    }\r\n\r\n    onDrop = async (files) => {\r\n        this.setState({ loading_ifc: true })\r\n        await this.viewer.IFC.loadIfc(files[0], true);\r\n        this.setState({ loaded: true, loading_ifc: false })\r\n    };\r\n\r\n    handleToggleClipping = () => {\r\n        this.viewer.clipper.active = !this.viewer.clipper.active;\r\n    };\r\n\r\n    handleClickOpen = () => {\r\n        this.dropzoneRef.current.open();\r\n    };\r\n\r\n    handleOpenBcfDialog = () => {\r\n        this.setState({\r\n            ...this.state,\r\n            bcfDialogOpen: true\r\n        });\r\n    };\r\n\r\n    handleCloseBcfDialog = () => {\r\n        this.setState({\r\n            ...this.state,\r\n            bcfDialogOpen: false\r\n        });\r\n    };\r\n\r\n    handleOpenViewpoint = (viewpoint) => {\r\n        this.viewer.currentViewpoint = viewpoint;\r\n    };\r\n\r\n    render() {\r\n        return (\r\n          <>\r\n              <BcfDialog\r\n                open={this.state.bcfDialogOpen}\r\n                onClose={this.handleCloseBcfDialog}\r\n                onOpenViewpoint={this.handleOpenViewpoint}\r\n              />\r\n              <div style={{ display: 'flex', flexDirection: 'row', height: '100vh' }}>\r\n                  <aside style={{ width: 50 }}>\r\n                      <IconButton onClick={this.handleClickOpen}>\r\n                          <FolderOpenOutlinedIcon />\r\n                      </IconButton>\r\n                      <IconButton onClick={this.handleToggleClipping}>\r\n                          <CropIcon />\r\n                      </IconButton>\r\n                    {/*  <IconButton onClick={this.handleOpenBcfDialog}>\r\n                          <FeedbackOutlinedIcon />\r\n                      </IconButton>*/}\r\n                  </aside>\r\n                  <Dropzone ref={this.dropzoneRef} onDrop={this.onDrop}>\r\n                      {({ getRootProps, getInputProps }) => (\r\n                        <div {...getRootProps({ className: 'dropzone' })}>\r\n                            <input {...getInputProps()} />\r\n                        </div>\r\n                      )}\r\n                  </Dropzone>\r\n                  <div style={{ flex: '1 1 auto', minWidth: 0 }}>\r\n                      <div id='viewer-container' style={{ position: 'relative', height: '100%', width: '100%' }} />\r\n                  </div>\r\n              </div>\r\n              <Backdrop\r\n                style={{\r\n                    zIndex: 100,\r\n                    display: \"flex\",\r\n                    alignItems: \"center\",\r\n                    alignContent: \"center\"\r\n                }}\r\n                open={this.state.loading_ifc}\r\n              >\r\n                  <CircularProgress/>\r\n              </Backdrop>\r\n          </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 99;"],"sourceRoot":""}